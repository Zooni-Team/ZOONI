@using Zooni.Models
@{
    ViewData["Title"] = "Chat con ZooniVet ü©µ";
    Layout = null;
}

<!DOCTYPE html>
<html lang="es">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />
<title>@ViewData["Title"]</title>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet" />
<style>
:root {
    --verde: #3ac37d;
    --amarillo: #FFD85A;
    --marron: #4B3B2B;
    --blanco: #ffffff;
    --sombra: rgba(0,0,0,0.12);
}

html, body {
    margin: 0;
    padding: 0;
    height: 100%;
    background: url('/img/fondos/bosque.jpg') center/cover no-repeat fixed;
    font-family: 'Poppins', sans-serif;
    color: var(--marron);
    display: flex;
    flex-direction: column;
}

/* HEADER */
header {
    position: fixed;
    top: 15px;
    left: 20px;
    z-index: 10;
}

.menu-icon {
    width: 38px;
    height: 38px;
    cursor: pointer;
    background: none;
    border: none;
    transition: transform .25s ease;
}
.menu-icon:hover { transform: scale(1.1); }

/* MEN√ö LATERAL */
.menu-lateral {
    position: fixed;
    top: 0;
    left: -260px;
    width: 240px;
    height: 100%;
    background: rgba(255,255,255,0.96);
    backdrop-filter: blur(12px);
    box-shadow: 4px 0 14px var(--sombra);
    display: flex;
    flex-direction: column;
    padding: 2.5rem 1.2rem;
    gap: 1rem;
    transition: all .4s ease;
    z-index: 9;
    border-top-right-radius: 18px;
    border-bottom-right-radius: 18px;
}
.menu-lateral.abierto { left: 0; }
.cerrar-menu {
    align-self: flex-end;
    font-size: 1.6rem;
    cursor: pointer;
    margin-bottom: 1.5rem;
    color: var(--marron);
}
.menu-lateral a {
    text-decoration: none;
    font-weight: 600;
    color: var(--marron);
    font-size: 1.1rem;
    padding: 0.6rem 0.8rem;
    border-radius: 12px;
    transition: all .25s ease;
}
.menu-lateral a:hover {
    background: var(--amarillo);
    color: #3c2a00;
}
.overlay {
    position: fixed;
    top: 0; left: 0;
    width: 100%; height: 100%;
    background: rgba(0,0,0,0.25);
    opacity: 0; pointer-events: none;
    transition: opacity .3s ease;
    z-index: 8;
}
.overlay.activo { opacity: 1; pointer-events: auto; }

/* CONTENIDO */
main {
    margin-top: 70px;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 20px;
    flex: 1;
}

/* FICHA MASCOTA */
.mascota-card {
    background: rgba(255,255,255,0.8);
    border-radius: 20px;
    box-shadow: 0 4px 12px var(--sombra);
    padding: 15px 20px;
    width: 90%;
    max-width: 600px;
    display: flex;
    align-items: center;
    gap: 15px;
    margin-bottom: 20px;
    backdrop-filter: blur(10px);
}
.mascota-card img {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    object-fit: cover;
    border: 3px solid var(--verde);
}
.mascota-info strong {
    color: var(--verde);
    font-size: 1.2rem;
}
.mascota-info small { color: #555; }

/* CHAT */
#chatBox {
    width: 90%;
    max-width: 600px;
    background: rgba(255,255,255,0.9);
    border-radius: 18px;
    padding: 15px;
    box-shadow: 0 4px 12px var(--sombra);
    overflow-y: auto;
    height: 30vh;
    backdrop-filter: blur(8px);
}
.msg {
    margin: 8px 0;
    padding: 10px 15px;
    border-radius: 15px;
    max-width: 80%;
    line-height: 1.5;
    animation: fadeIn 0.3s ease;
}
.user {
    background: var(--verde);
    color: white;
    align-self: flex-end;
    border-bottom-right-radius: 3px;
}
.Zooni {
    background: var(--amarillo);
    align-self: flex-start;
    border-bottom-left-radius: 3px;
}

/* FORMULARIO */
form {
    width: 90%;
    max-width: 600px;
    margin-top: 12px;
    display: flex;
    flex-direction: column;
    gap: 8px;
}
textarea {
    resize: none;
    height: 55px;
    padding: 12px;
    border-radius: 15px;
    border: 1px solid #ccc;
    font-family: 'Poppins';
    font-size: 18px;
    outline: none;
    transition: 0.3s;
}
textarea:focus {
    border-color: var(--verde);
    box-shadow: 0 0 5px #b2e7c9;
}
button {
    background: var(--amarillo);
    border: none;
    border-radius: 15px;
    padding: 10px;
    font-weight: 700;
    font-size: 1rem;
    color: #3a2b00;
    box-shadow: 0 3px 6px rgba(0,0,0,0.2);
    cursor: pointer;
    transition: all 0.2s ease;
}
button:hover {
    background: #ffcc48;
    transform: translateY(-1px);
}
#status {
    font-size: 13px;
    color: #654b34;
    text-align: center;
}

/* ANIMACIONES */
@@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

/* RESPONSIVE */
@@media (max-width: 600px) {
    .mascota-card { flex-direction: column; text-align: center; }
    #chatBox { height: 30vh; }
    textarea { height: 50px; }
}
h1
{
    margin-top: -10%;
}
/* MEN√ö LATERAL */
.menu-lateral {
    position: fixed;
    top: 0;
    left: 0;
    width: 240px;
    height: 100%;
    background: rgba(255,255,255,0.96);
    backdrop-filter: blur(12px);
    box-shadow: 4px 0 14px var(--sombra);
    display: none; /* oculto al inicio */
    flex-direction: column;
    padding: 2.5rem 1.2rem;
    gap: 1rem;
    transition: all .4s ease;
    z-index: 9;
    border-top-right-radius: 18px;
    border-bottom-right-radius: 18px;
}
.menu-lateral.abierto {
    display: flex;
    animation: slideIn 0.35s ease forwards;
}
@@keyframes slideIn {
    from { transform: translateX(-100%); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
}

.cerrar-menu {
    align-self: flex-end;
    font-size: 1.6rem;
    cursor: pointer;
    margin-bottom: 1.5rem;
    color: var(--marron);
}

.menu-lateral a {
    text-decoration: none;
    font-weight: 600;
    color: var(--marron);
    font-size: 1.1rem;
    padding: 0.6rem 0.8rem;
    border-radius: 12px;
    transition: all .25s ease;
}
.menu-lateral a:hover {
    background: var(--amarillo);
    color: #3c2a00;
}

/* OVERLAY */
.overlay {
    position: fixed;
    top: 0; left: 0;
    width: 100%; height: 100%;
    background: rgba(0,0,0,0.25);
    opacity: 0;
    pointer-events: none;
    transition: opacity .3s ease;
    z-index: 8;
}
.overlay.activo {
    opacity: 1;
    pointer-events: auto;
}


</style>
</head>
<body>
<header>
    <img src="~/img/icons/hamburger.png" alt="Men√∫" class="menu-icon" id="abrirMenu" />
</header>

<div class="menu-lateral" id="menuLateral">
    <div class="cerrar-menu" id="cerrarMenu">‚úñ</div>
    <a href="/Home/Index">üè† Inicio</a>
    <a href="/Comunidad">üë• Comunidad</a>
    <a href="/Marketplace">üõí Marketplace</a>
    <a href="/home/FichaMedica">üíâ Ficha m√©dica</a>
    <a href="/home/calendario">üìÖ Calendario</a>
    <a href="/Chat/ChatZooni">üí¨ ChatBot</a>
    <a href="/Closet">üëï Closet</a>
    <a href="/Home/Perfil">üë§ Perfil</a>
    <a href="/Home/configuracion">‚öôÔ∏è Configuraci√≥n</a>
    <a href="/Auth/Logout" style="color:red;">üö™ Cerrar sesi√≥n</a>
</div>

<div class="overlay" id="overlay"></div>

<main>
    <h1 style="color:#fff; text-shadow:2px 3px 5px rgba(0.3,0.3,0.3,0.5); margin-bottom:10px;">ZooniVet</h1>

    <div class="mascota-card">
        <img src="/img/mascotas/@(ViewBag.Especie?.ToString().ToLower() ?? "perro")s/@(ViewBag.Raza?.ToString().ToLower() ?? "basico")/@(ViewBag.Especie?.ToString().ToLower() ?? "perro")_basico.png" alt="Mascota">
        <div class="mascota-info">
            <strong>@ViewBag.Nombre</strong><br>
            <small>@ViewBag.Raza (@ViewBag.Especie)</small><br>
üïí @ViewBag.Edad meses 
        </div>
    </div>

    <div id="chatBox"></div>

        <form id="chatForm">
            <input type="hidden" id="especie" value="@ViewBag.Especie" />
            <input type="hidden" id="raza" value="@ViewBag.Raza" />
            <input type="hidden" id="edad" value="@ViewBag.Edad" />
            <input type="hidden" id="peso" value="@ViewBag.Peso" />
            <input type="hidden" id="infoMedica" value="@ViewBag.InfoMedica" />

            <textarea id="mensaje" placeholder="Escrib√≠ tu mensaje para ZooniVet..." required></textarea>
            <button type="submit">Enviar ü©∫</button>
            <button type="button" id="reiniciar">Reiniciar üîÑ</button>
            <p id="status">üí¨ Esperando mensaje...</p>
        </form>
</main>

<script>
const menu = document.getElementById("menuLateral");
const overlay = document.getElementById("overlay");
const abrir = document.getElementById("abrirMenu");
const cerrar = document.getElementById("cerrarMenu");

function cerrarMenu() {
    menu.classList.remove("abierto");
    overlay.classList.remove("activo");
}
abrir.addEventListener("click", () => {
    menu.classList.add("abierto");
    overlay.classList.add("activo");
});
cerrar.addEventListener("click", cerrarMenu);
overlay.addEventListener("click", cerrarMenu);

// CHAT
const form = document.getElementById("chatForm");
const chatBox = document.getElementById("chatBox"); //vitalink estuvo aqui
const reiniciar = document.getElementById("reiniciar");
const status = document.getElementById("status");

function addMsg(text, type) {
    const div = document.createElement("div");
    div.className = "msg " + type;
    div.textContent = text;
    chatBox.appendChild(div);
    chatBox.scrollTop = chatBox.scrollHeight;
}

form.addEventListener("submit", async e => {
    e.preventDefault();
    const data = {
        especie: especie.value,
        raza: raza.value,
        edad: edad.value,
        peso: peso.value,
        infoMedica: infoMedica.value,
        mensaje: mensaje.value
    };
    const msg = mensaje.value.trim();
    if (!msg) return;
    addMsg(msg, "user");
    mensaje.value = "";
    status.textContent = "‚åõ Esperando respuesta de ZooniVet...";
    try {
        const res = await fetch("/Chat/EnviarMensaje", {
            method: "POST",
            headers: { "Content-Type": "application/x-www-form-urlencoded" },
            body: new URLSearchParams(data)
        });
        const json = await res.json();
        if (json.respuesta && json.respuesta.length > 0) {
            addMsg(json.respuesta, "Zooni");
            status.textContent = "üíö ZooniVet conectado";
        } else {
            addMsg("‚ö†Ô∏è No recib√≠ respuesta. Verific√° conexi√≥n o API Key.", "Zooni");
            status.textContent = "‚ùå Error de conexi√≥n con ZooniVet";
        }
    } catch {
        addMsg("‚ùå Error de conexi√≥n con el servidor o con Gemini.", "Zooni");
        status.textContent = "‚ö†Ô∏è ZooniVet no disponible.";
    }
});

reiniciar.addEventListener("click", async () => {
    await fetch("/Chat/ReiniciarChat", { method: "POST" });
    chatBox.innerHTML = "";
    status.textContent = "üí¨ Chat reiniciado.";
});
</script>
</body>
</html>
