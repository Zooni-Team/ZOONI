@{
    ViewData["Title"] = "Registro - Zooni";
    Layout = null;
    var mascotaNombre = ViewBag.MascotaNombre ?? "Tu Mascota";
    var mascotaEspecie = ViewBag.MascotaEspecie?.ToString()?.ToLower() ?? "perro";
    var mascotaRaza = ViewBag.MascotaRaza?.ToString()?.ToLower() ?? "basico";
    var rutaImagen = $"/img/mascotas/{mascotaEspecie}s/{mascotaRaza}/{mascotaEspecie}_basico.png";
}
<!DOCTYPE html>
<html lang="es">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>@ViewData["Title"]</title>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet" />
<style>
:root {
    --marron: #8B5E3C;
    --verde: #3ac37d;
    --gris-claro: #ccc;
}
body {
    font-family: 'Poppins', sans-serif;
    background: #fff;
    margin: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
}
h1 {
    color: var(--marron);
    font-size: 2.3rem;
    margin: 1rem 0 0;
    font-weight: 700;
}
h2 {
    color: #555;
    font-weight: 700;
    margin: .3rem 0 1rem;
    font-size: 1.1rem;
}
.contenedor {
    background: #fff;
    border-radius: 25px;
    box-shadow: 0 8px 25px rgba(0,0,0,.08);
    text-align: center;
    padding: 2rem;
    width: 90%;
    max-width: 400px;
    position: relative;
    z-index: 2;
}
.volver {
    position: absolute;
    top: 15px;
    left: 15px;
    background: none;
    border: none;
    font-size: 28px;
    color: var(--marron);
    cursor: pointer;
    transition: transform .2s ease, color .2s ease;
}
.volver:hover { transform: scale(1.1); color: var(--verde); }
.nombre-mascota {
    font-weight: 700;
    font-size: 1.4rem;
    color: #000;
    margin-bottom: .4rem;
}
.mascota-img {
    width: 200px;
    height: auto;
    margin: .5rem 0 1rem;
    object-fit: contain;
    z-index: 3;
}
form {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 12px;
}
.fila {
    display: flex;
    justify-content: center;
    gap: 10px;
    width: 100%;
    max-width: 320px;
}
input, select {
    width: 100%;
    max-width: 320px;
    padding: 12px;
    border-radius: 20px;
    border: 1.8px solid var(--gris-claro);
    font-size: 15px;
    text-align: center;
    outline: none;
}
input:focus, select:focus {
    border-color: var(--verde);
}
.btn-principal {
    background: var(--verde);
    color: #fff;
    border: none;
    border-radius: 25px;
    padding: 12px 40px;
    font-size: 1.1rem;
    cursor: pointer;
    margin-top: 1rem;
    width: 100%;
    max-width: 320px;
    font-weight: 600;
}
.imagen-bienvenida {
    position: absolute;
    bottom: 0;
    width: 100%;
    display: flex;
    justify-content: center;
    z-index: 1;
}
.imagen-bienvenida img {
    width: 100%;
    max-width: 900px;
    object-fit: cover;
}
</style>
</head>
<body>
<h1>Zooni</h1>
<h2>¬°Registrate!</h2>

<div class="contenedor">
    <button class="volver" onclick="window.location.href='/Registro/Registro4'">‚Üê</button>
    <div class="nombre-mascota">@mascotaNombre</div>
    <img src="@rutaImagen" alt="Mascota" class="mascota-img" />
    <p style="font-weight:600;color:#444;">¬°Ya falta poco!</p>

    <form asp-action="Registro5" asp-controller="Registro" method="post">
        @Html.AntiForgeryToken()

        <div class="fila">
            <select id="Pais" name="Pais" required></select>
            <select id="Provincia" name="Provincia" required disabled>
                <option value="">Provincia</option>
            </select>
        </div>

        <select id="Ciudad" name="Ciudad" required disabled>
            <option value="">Ciudad</option>
        </select>

        <div class="fila">
            <select id="CodigoPais" name="CodigoPais" required>
                <option value="">C√≥digo</option>
            </select>
            <input type="tel" name="Telefono" placeholder="Tel√©fono" required autocomplete="off" />
        </div>

        <button type="submit" class="btn-principal">Continuar</button>
    </form>
</div>

<div class="imagen-bienvenida">
    <img src="~/img/mascotas-bienvenida.png" alt="Mascotas Bienvenida" />
</div>

<!-- ‚úÖ Librer√≠a local -->
<script src="~/lib/country-state-city/country-state-city.umd.min.js"></script>

<script>
document.addEventListener("DOMContentLoaded", () => {
    if (typeof window.csc === "undefined") {
        console.error("‚ùå No se carg√≥ la librer√≠a country-state-city");
        return;
    }

    const { Country, State, City } = window.csc;
    const paisSelect = document.getElementById("Pais");
    const provinciaSelect = document.getElementById("Provincia");
    const ciudadSelect = document.getElementById("Ciudad");
    const codigoSelect = document.getElementById("CodigoPais");
    const telefonoInput = document.querySelector('input[name="Telefono"]');

    const flag = (a2) => String.fromCodePoint(...[...a2.toUpperCase()].map(c => 127397 + c.charCodeAt(0)));

    // üåç Pa√≠ses
    const countries = Country.getAllCountries();
    paisSelect.innerHTML = '<option value="">Pa√≠s</option>';
    countries.forEach(c => {
        const opt = document.createElement("option");
        opt.value = c.isoCode;
        opt.textContent = `${flag(c.isoCode)} ${c.name}`;
        opt.dataset.phone = `+${c.phonecode}`;
        paisSelect.appendChild(opt);
    });

    // üìû C√≥digos
    const allCodes = [...new Set(countries.map(c => `+${c.phonecode}`))]
        .sort((a, b) => parseInt(a.slice(1)) - parseInt(b.slice(1)));
    codigoSelect.innerHTML = '<option value="">C√≥digo</option>' +
        allCodes.map(c => `<option value="${c}">${c}</option>`).join("");

    function reset(sel, label) {
        sel.innerHTML = `<option value="">${label}</option>`;
        sel.disabled = true;
    }
    reset(provinciaSelect, "Provincia");
    reset(ciudadSelect, "Ciudad");

    // üè≥Ô∏è Pa√≠s seleccionado ‚Üí Provincias
    paisSelect.addEventListener("change", () => {
        const iso = paisSelect.value;
        const dial = paisSelect.selectedOptions[0]?.dataset?.phone || "";
        codigoSelect.value = dial;
        reset(provinciaSelect, "Provincia");
        reset(ciudadSelect, "Ciudad");
        if (!iso) return;
        telefonoInput.value = dial + " ";
        telefonoInput.focus();

        const states = State.getStatesOfCountry(iso);
        if (states.length) {
            provinciaSelect.disabled = false;
            provinciaSelect.innerHTML = '<option value="">Provincia</option>' +
                states.map(s => `<option value="${s.isoCode}">${s.name}</option>`).join("");
        }
    });

    // üèôÔ∏è Provincia ‚Üí Ciudades
   // üèôÔ∏è Provincia ‚Üí Ciudades
provinciaSelect.addEventListener("change", () => {
    const isoPais = paisSelect.value;
    const isoProv = provinciaSelect.value;
    reset(ciudadSelect, "Ciudad");

    if (!isoPais || !isoProv) return;

    const list = window.csc.City.getCitiesOfState(isoPais, isoProv);
    const cities = Array.isArray(list) ? list : [];

    if (cities.length > 0) {
        ciudadSelect.disabled = false;
        ciudadSelect.innerHTML = '<option value="">Ciudad</option>' +
            cities.map(ci => `<option value="${ci}">${ci}</option>`).join("");
    }
});

    // üìû C√≥digo ‚Üí sincronizaci√≥n con input tel√©fono
    codigoSelect.addEventListener("change", () => {
    telefonoInput.focus();
});
});
</script>
</body>
</html>
